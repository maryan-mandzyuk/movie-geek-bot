const WizardScene = require('telegraf/scenes/wizard');
const Markup = require('telegraf/markup');
const Articles = require('./article');
const Film = require('./film');
const Show = require('./show');

const mainScene = new WizardScene('mainScene',
	((ctx) => {
		ctx.reply('Main menu', Markup.keyboard([
			['üì∞ News'],
			['üìΩÔ∏è Films', 'üì∫ TV shows'],
		]).extra());
		return ctx.wizard.next();
	}),
	(async (ctx) => {
		if (ctx.message.text === 'üì∞ News') {
			const articles = await Articles.getArticles();
			Articles.postArticles(ctx, articles);
		} else if (ctx.message.text === 'üìΩÔ∏è Films') {
			ctx.scene.leave();
			return ctx.scene.enter('filmScene');
		} if (ctx.message.text === 'üì∫ TV shows') {
			ctx.scene.leave();
			return ctx.scene.enter('ShowScene');
		}
		ctx.reply('News:', Markup.keyboard([
			['üìã Back to main menu'],
		]).resize()
			.extra());
		return ctx.wizard.next();
	}),
	((ctx) => {
		ctx.scene.leave();
		return ctx.scene.enter('mainScene');
	}));


const filmScene = new WizardScene('filmScene',
	((ctx) => {
		ctx.reply('Films menu', Markup.keyboard([
			['üçø Now in cinema'],
			['üóìÔ∏è Upcoming'],
			['‚¨ÖÔ∏è Back']
		]).extra());
		return ctx.wizard.next();
	}),
	(async (ctx) => {
		let url;
		if (ctx.message.text === 'üçø Now in cinema') {
			url = process.env.URL_FILMS_PN;
		} else if (ctx.message.text === 'üóìÔ∏è Upcoming') {
			url = process.env.URL_FILMS_UPC;
		} else if (ctx.message.text === '‚¨ÖÔ∏è Back') {
			ctx.scene.leave();
			return ctx.scene.enter('mainScene');
		}
		const films = await Film.getFilms(url);
		Film.postFilms(films, ctx);
		ctx.reply('Films:', Markup.keyboard([
			['‚¨ÖÔ∏è Back', 'üìã To main menu'],
		]).resize()
			.extra());
		return ctx.wizard.next();
	}),
	((ctx) => {
		if (ctx.message.text === '‚¨ÖÔ∏è Back') {
			return ctx.scene.reenter();
		}
		ctx.scene.leave();
		return ctx.scene.enter('mainScene');
	}));

const showScene = new WizardScene('ShowScene',
	((ctx) => {
		ctx.reply('Serials menu', Markup.keyboard([
			['‚ñ∂Ô∏è Now on TV'],
			['üî• Trending today', 'üìà Trending this week'],
			['üìã Back to main menu']
		]).extra());
		return ctx.wizard.next();
	}),
	(async (ctx) => {
		let url;
		if (ctx.message.text === '‚ñ∂Ô∏è Now on TV') {
			url = process.env.URL_TV_Now;
		} else if (ctx.message.text === 'üî• Trending today') {
			url = process.env.URL_Trending_TV_Day;
		}	else if (ctx.message.text === 'üìà Trending this week') {
			url = process.env.URL_Trending_TV_Week;
		} else if (ctx.message.text === 'üìã Back to main menu') {
			ctx.scene.leave();
			return ctx.scene.enter('mainScene');
		}
		const shows = await Show.getShows(url);
		Show.postShows(shows, ctx);
		ctx.reply('Shows:', Markup.keyboard([
			['‚¨ÖÔ∏è Back', 'üìã To main menu'],
		]).resize()
			.extra());
		return ctx.wizard.next();
	}),
	((ctx) => {
		if (ctx.message.text === '‚¨ÖÔ∏è Back') {
			return ctx.scene.reenter();
		}
		ctx.scene.leave();
		return ctx.scene.enter('mainScene');
	}));

module.exports = Object.freeze({
	mainScene,
	filmScene,
	showScene
});